---
import Header from "../components/Header.astro";
import MediaGallery from "../components/MediaGallery.astro";
import { Image } from "astro:assets";

interface Props {
  title: string;
  subtitle: string;
  sections: Record<string, string>;
  media: Record<
    string,
    Array<{
      type: "image" | "video";
      src: string;
      alt?: string;
    }>
  >;
}

const { title, subtitle, sections, media } = Astro.props;
const sectionIds = Object.keys(sections);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
  </head>
  <body>
    <header class="molecular-header" id="molecular-header">
      <Header />
    </header>

    <div class="hero-section">
      <Image
        src="/art/molecular/media/hero.jpg"
        alt="Molecular Hero"
        width={1920}
        height={1080}
        class="hero-image"
      />
      <div class="hero-content">
        <h1>{title}</h1>
        <p>{subtitle}</p>
      </div>
    </div>

    <main class="content">
      {
        sectionIds.map((sectionId) => (
          <div class="section" id={sectionId}>
            <div class="text-content">
              <h3>{sectionId.charAt(0).toUpperCase() + sectionId.slice(1)}</h3>
              <div id={`${sectionId}-content`} />
            </div>
            <div class="media-scroll">
              {media[sectionId] && <MediaGallery media={media[sectionId]} />}
            </div>
          </div>
        ))
      }
    </main>

    <footer class="molecular-footer" id="molecular-footer">
      {
        sectionIds.map((section) => (
          <div class="footer-section" data-section={section}>
            <a href={`#${section}`}>
              <h2>{section.charAt(0).toUpperCase() + section.slice(1)}</h2>
            </a>
          </div>
        ))
      }
    </footer>

    <script>
      import { gsap } from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";
      import { ScrollToPlugin } from "gsap/ScrollToPlugin";

      gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);

      // Header show/hide on scroll
      let lastScrollTop = 0;
      const header = document.querySelector('.molecular-header');
      
      ScrollTrigger.create({
        start: 0,
        end: "max",
        onUpdate: (self) => {
          const st = window.pageYOffset || document.documentElement.scrollTop;
          if (st > lastScrollTop) {
            // Scrolling down
            gsap.to(header, {
              yPercent: -100,
              duration: 0.3,
              ease: "power2.inOut"
            });
          } else {
            // Scrolling up
            gsap.to(header, {
              yPercent: 0,
              duration: 0.3,
              ease: "power2.inOut"
            });
          }
          lastScrollTop = st;
        }
      });

      // Initialize smooth scrolling and snapping
      const sections = document.querySelectorAll(".section");
      const heroSection = document.querySelector(".hero-section");

      // Create an array of all sections including hero
      const allSections = [heroSection, ...sections];

      // Set up scroll snapping
      allSections.forEach((section, i) => {
        if (!section) return;
        ScrollTrigger.create({
          trigger: section,
          start: "top top",
          // snap: {
          //   snapTo: 1,
          //   duration: { min: 0.2, max: 0.5 },
          //   delay: 0.01,
          //   ease: "power1.inOut",
          // },
          scrub: 1,
        });
      });

      // Set up horizontal scroll for each media section
      sections.forEach((section) => {

        const mediaContainer = section.querySelector('.media-container');
        if (!mediaContainer || !(mediaContainer instanceof HTMLElement)) return;

        // Create timeline for horizontal scroll
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: section,
            start: "top top",
            scrub: true,
            pin: true,
            // anticipatePin: 1,
            markers: true,
            end: () => `+=${(mediaContainer.scrollWidth - mediaContainer.clientWidth)}`,
          }
        });

        // Animate the horizontal scroll
        tl.to(mediaContainer, {
          x: -(mediaContainer.scrollWidth - mediaContainer.clientWidth),
          ease: "none"
        });
      });

      // Footer section highlighting
      const footerSections = document.querySelectorAll(".footer-section");

      ScrollTrigger.create({
        trigger: ".content",
        start: "top top",
        end: "bottom bottom",
        onUpdate: (self) => {
          sections.forEach((section, i) => {
            const bounds = section.getBoundingClientRect();
            if (
              bounds.top < window.innerHeight * 0.5 &&
              bounds.bottom > window.innerHeight * 0.5
            ) {
              footerSections.forEach((fs) => fs.classList.remove("active"));
              footerSections[i].classList.add("active");
            }
          });
        },
      });

      // Smooth scroll for footer links
      document.querySelectorAll(".footer-section a").forEach((link) => {
        link.addEventListener("click", (e) => {
          e.preventDefault();
          const href = link.getAttribute("href");
          if (!href) return;

          const targetId = href.slice(1);
          const target = document.getElementById(targetId);
          if (target) {
            gsap.to(window, {
              duration: 1,
              scrollTo: target,
              ease: "power2.inOut",
            });
          }
        });
      });
    </script>

    <style>
      :root {
        --header-height: 60px;
        --footer-height: 80px;
        --text-width: 400px;
        --transparent-background: rgba(255, 255, 255, 0.6);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        line-height: 1.5;
        color: #333;
        scroll-behavior: smooth;
        position: relative;
      }

      .molecular-header {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: var(--header-height);
        z-index: 1000;
        background: var(--transparent-background);
        backdrop-filter: blur(10px);
        transform: translateY(0);
        transition: transform 0.3s ease;
      }

      .hero-section {
        width: 100%;
        height: 100vh;
        position: relative;
        overflow: hidden;
      }

      .hero-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .hero-content {
        position: absolute;
        top: 100px;
        left: 2rem;
        text-align: left;
        color: black;
        padding: 2rem;
      }

      .hero-content h1 {
        font-size: 8rem;
        font-weight: 900;
        margin-bottom: 1rem;
        letter-spacing: 0.2em;
        color: white;
        text-shadow:
          8px 8px 40px rgba(0, 0, 0, 0.6),
          -8px 8px 40px rgba(0, 0, 0, 0.6),
          8px -8px 40px rgba(0, 0, 0, 0.6),
          -8px -8px 40px rgba(0, 0, 0, 0.6),
          16px 16px 60px rgba(0, 0, 0, 0.4);
      }

      .hero-content p {
        font-size: 1.5rem;
        color: white;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
      }

      .section {
        min-height: 100vh;
        position: relative;
        display: flex;
        max-width: 100vw;
      }

      .text-content {
        width: var(--text-width);
        padding: 2rem;
        padding-top: calc(var(--header-height) + 2rem);
        background: white;
        z-index: 1;
        box-shadow: 20px 0 20px rgba(0, 0, 0, 0.1);
      }
      h3 {
        font-size: 1.5rem;
        font-weight: 600;
        text-transform: capitalize;
      }

      .media-scroll {
        flex: 1;
        overflow: hidden;
        display: flex;
        align-items: center;
        white-space: nowrap;
        height: 100vh;
        padding-bottom: var(--footer-height);
      }

      .media-scroll::-webkit-scrollbar {
        display: none;
      }

      .molecular-footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        height: var(--footer-height);
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 3rem;
        background: var(--transparent-background);
        backdrop-filter: blur(10px);
        z-index: 100;
        padding: 0 1rem;
        box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
      }

      .footer-section {
        padding: 0;
        transition: all 0.3s ease;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: var(--footer-height);
      }

      .footer-section a {
        text-decoration: none;
        color: inherit;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .footer-section:hover {
        background: rgba(0, 0, 0, 0.05);
      }

      .footer-section h2 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
        opacity: 0.6;
        transition: opacity 0.3s ease;
        text-transform: capitalize;
      }

      .footer-section.active {
        background: rgba(0, 0, 0, 0.1);
      }

      .footer-section.active h2 {
        opacity: 1;
      }
    </style>
  </body>
</html>
